#!/usr/bin/env python3
import os
from pathlib import Path
import glob


current: Path = Path(os.path.dirname(os.path.realpath(__file__)))
root: Path = current.parent.absolute()
graphics_source = root.joinpath("assets/spinner")
graphics_target = root.joinpath("src")
graphics_target.mkdir(parents=True, exist_ok=True)
print(f"Rendering PETSCII conversion template... {graphics_source}")
output: Path = graphics_target.joinpath("spinner_include.asm")
filenames = sorted( filter( os.path.isfile, glob.glob(str(graphics_source.joinpath("*.c")))))

with open(output, mode="w") as o:
    o.write("""
/*
This file is autogenerated by bin/convert_c_spinner.py
*/

""")
    for filename in filenames:
        name: str = os.path.basename(filename).strip(".c")
        working: Path = graphics_source.joinpath(filename)
        with open(working, mode="r") as f:
            lines: list = f.readlines()
            count: int = 0
            for line in lines:
                if line[0].isnumeric():
                    data: str = line.strip(",\n")
                    if count == 8:
                        o.write(f"{name}_txt:\n")
                    if count >= 8 and count < 14:
                        o.write(f".byte {data}\n")
                    if count == 33:
                        o.write(f"{name}_col:\n")
                    if count >= 33 and count < 39:
                        o.write(f".byte {data}\n")
                count += 1
