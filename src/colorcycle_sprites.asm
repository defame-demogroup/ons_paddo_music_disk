.var cc_effect_delay_value=10

cc_colorcycle:
    inc cc_colorstep
    lda cc_colorstep
    lsr
    tax
    lda cc_player_colors,x
    sta $d027
    sta $d028
    sta $d029
    txa
    and #$0f
    tax
    lda cc_menu_colors,x
    sta $d02a
    sta $d02b
    dec cc_effect_delay
    bne !+
    lda #cc_effect_delay_value
    sta cc_effect_delay
    inc cc_effect_step
    ldx cc_effect_step
    .for(var i=0;i<5;i++){
        jsr !get_color+
        sta $d800 + ((11 + i) * $28) + 36
        jsr !get_color+
        sta $d800 + ((11 + i) * $28) + 37
        jsr !get_color+
        sta $d800 + ((11 + i) * $28) + 38
    }
!:
    rts
!get_color:
    txa
    adc $d41b
    eor $d41b
    tax
    lda cc_effect_colors,x
    inx
    rts

cc_menu_colors:
    .byte   $09, $0b, $08,  $0c, $0a, $0f, $07, $0f, $0a, $0c, $08, $0b, $09, $00, $00

cc_player_colors:
        //$00, $00, $00, $00, $00, $00, $00, $00 
    .byte $06, $0b, $04, $0e, $03, $0d, $01, $01
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $01, $01, $01, $01, $01 
    .byte $01, $01, $01, $0d, $03, $0e, $04, $0b

cc_colorstep:
    .byte $00

cc_effect_step:
    .byte $00

cc_effect_delay:
    .byte cc_effect_delay_value

cc_effect_colors:
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $02, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $00, $02, $00, $0e, $00, $0c
    .byte $0a, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $07, $00, $00, $00, $04, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $07, $00, $00, $00
    .byte $00, $00, $00, $08, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $04, $00, $00
    .byte $0e, $00, $00, $00, $00, $00, $00, $00
    .byte $0f, $00, $00, $00, $00, $00, $00, $00
    .byte $0d, $05, $00, $00, $00, $00, $00, $00
    .byte $0c, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $09, $07, $00, $04, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $00, $04, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $07, $00, $05, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $00, $0d, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $01, $07, $00, $00, $03, $02
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $0d, $00, $00, $00
    .byte $0a, $00, $00, $0a, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00
    .byte $00, $00, $00, $00, $00, $00, $00, $00







